version: 2
jobs:
  run-tests:
    docker:
      - image: circleci/node:6.10.2
        environment:
          DATABASE_URL: "postgres://ubuntu@localhost/circle_test"
          VCAP_APPLICATION: '{"uris":["http://localhost:8080/"]}'
          PLATFORM: local
      - image: postgres:9.6.3
        environment:
            POSTGRES_USER: "ubuntu"
            POSTGRES_DB: "circle_test"
    steps:
      - checkout
      - restore_cache:
          keys:
          - fs-ml-deps-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - fs-ml-deps-
      - run:
          name: Install dependencies
          command: |
            npm install
            sudo npm install -g istanbul
      - save_cache:
          paths:
            - ./node_modules
          key: fs-ml-deps-{{ checksum "package.json" }}
      - run:
          name: Populate DB
          command: npm run dba
      - run:
          name: Lint check
          command: npm run lint
      - run:
          name: Run tests
          command: |
            istanbul cover ./node_modules/mocha/bin/_mocha --report lcovonly -- -R spec --recursive
            codecov
  prod-deploy:
    docker:
      - image: circleci/node:6.10.2
    steps:
      - run:
          name: Deploy
          command: |
            if [ "${CIRCLE_PROJECT_USERNAME}" == "18F" ];
              then ./.cg-deploy/deploy.sh api-production;
            fi 
  staging-deploy:
    docker:
      - image: circleci/node:6.10.2
    steps:
      - run:
          name: Deploy
          command: |
            if [ "${CIRCLE_PROJECT_USERNAME}" == "18F" ];
              then ./.cg-deploy/deploy.sh api-staging;
            fi
            
workflows:
  version: 2
  build-deploy:
    jobs:
      - run-tests:
          requires:
      - staging-deploy:
          requires:
            - run-tests
          filters:
            branches:
              only: dev
      - prod-deploy:
          requires:
              - run-tests
          filters:
            branches:
              only: master
