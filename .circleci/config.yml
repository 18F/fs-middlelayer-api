version: 2
jobs:
  run-tests:
    docker:
      - image: circleci/node:8.9.4
        environment:
          DATABASE_URL: "postgres://ubuntu@localhost/circle_test"
          DATE_STRING: `date +"%m-%d-%Y-%H-%M-%S"`
          SNYK_REPORT: snyk-${CIRCLE_PR_REPONAME}-${DATE_STRING}.csv
      - image: postgres:9.6.3
        environment:
            POSTGRES_USER: "ubuntu"
            POSTGRES_DB: "circle_test"
    steps:
      - checkout
      - restore_cache:
          keys:
          - fs-ml-deps-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - fs-ml-deps-
      # - run:
      #     name: Install dependencies
      #     command: |
      #       npm install
      #       sudo npm install -g istanbul
      #       sudo npm install -g snyk
      # - save_cache:
      #     paths:
      #       - ./node_modules
      #     key: fs-ml-deps-{{ checksum "package.json" }}
      # - run:
      #     name: Populate DB
      #     command: npm run dba
      # - run:
      #     name: Lint check
      #     command: npm run lint
      - run:
          name: Snyk vulnerability test
          command: |
            echo ${SNYK_REPORT}
            # set +x
            # mkdir -p a=rw snyk
            # snyk test #For human
            # snyk test --json > snyk/snyk.json
            # sudo cat snyk/snyk.json  \
            # | jq -r '["Package", "CVE", "CWE", "Severity", "CVSSScore", "Title", "Disclosure Time", "Description", "Library Paths"], (.vulnerabilities[] | [.packageName, .identifiers.CVE[0], .identifiers.CWE[0], .severity, .cvssScore, .title,.disclosureTime, .description, .from[1], .from[2]] )| @csv' >  \
            # "snyk/${SNYK_REPORT}"
            # ls snyk
      # - run:
      #     name: Run tests
      #     command: |
      #       npm run coverage
      #       ./node_modules/codecov/bin/codecov
      # - run:
      #     name: Clean s3 bucket
      #     command: ./.circleci/clean-s3-bucket.sh
      # - run:
      #     name: Save Snyk Artifacts
      #     command: ./.circleci/store-snyk.sh ${SNYK_REPORT}

  prod-deploy:
    docker:
      - image: circleci/node:8.9.4
    steps:
      - run:
          name: Deploy
          command: |
            if [ "${CIRCLE_PROJECT_USERNAME}" == "18F" ];
              then ./.cg-deploy/deploy.sh api-production;
            fi 
  staging-deploy:
    docker:
      - image: circleci/node:8.9.4
    steps:
      - run:
          name: Deploy
          command: |
            if [ "${CIRCLE_PROJECT_USERNAME}" == "18F" ];
              then ./.cg-deploy/deploy.sh api-staging;
            fi
            
workflows:
  version: 2
  build-deploy:
    jobs:
      - run-tests:
          requires:
      - staging-deploy:
          requires:
            - run-tests
          filters:
            branches:
              only: dev
      - prod-deploy:
          requires:
              - run-tests
          filters:
            branches:
              only: master
  
