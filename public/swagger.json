

{
   "swagger": "2.0",
   "info": {
      "description": "This page is for developers. We built this site entirely off the APIs (Application Programming Interfaces) below and we want to share them with you.",
      "version": "1.0.0",
      "title": "API Documentation for Developers"
   },
   "host": "",
   "basePath": "/",
   "tags": [
      {
         "name": "  ",
         "description": "e-Permitting API"
      }
   ],
   "schemes": [
      "http"
   ],
   "paths": {
      "/permit": {
         "post": {
            "tags": [
               "permit"
            ],
            "summary": "Submit a new Permit",
            "description": "",
            "operationId": "createPermit",
            "consumes": [
               "application/json"
            ],
            "produces": [
               "application/json"
            ],
            "parameters": [
               {
                  "in": "body",
                  "name": "body",
                  "description": "permit information",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/permit"
                  }
               }
            ],
            "responses": {
               "405": {
                  "description": "Invalid input"
               }
            },
            "security": [
               {
                  "permit_auth": [
                     "write:permits",
                     "read:permits"
                  ]
               }
            ]
         },
         "put": {
            "tags": [
               "permit"
            ],
            "summary": "Update an existing Permit",
            "description": "",
            "operationId": "updatePermit",
            "consumes": [
               "application/json"
            ],
            "produces": [
               "application/json"
            ],
            "parameters": [
               {
                  "in": "body",
                  "name": "body",
                  "description": "Permit object that needs to be added",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/Permit"
                  }
               }
            ],
            "responses": {
               "400": {
                  "description": "Invalid ID supplied"
               },
               "404": {
                  "description": "Permit not found"
               },
               "405": {
                  "description": "Validation exception"
               }
            },
            "security": [
               {
                  "permit_auth": [
                     "write:permits",
                     "read:permits"
                  ]
               }
            ]
         }
      },
      "/permit/{permitId}": {
         "get": {
            "tags": [
               "permit"
            ],
            "summary": "Find permit by ID",
            "description": "Returns a single permit",
            "operationId": "getPermitById",
            "produces": [
               "application/json"
            ],
            "parameters": [
               {
                  "name": "permitId",
                  "in": "path",
                  "description": "ID of permit to return",
                  "required": true,
                  "type": "integer",
                  "format": "int64"
               }
            ],
            "responses": {
               "200": {
                  "description": "successful operation",
                  "schema": {
                     "$ref": "#/definitions/Permit"
                  }
               },
               "400": {
                  "description": "Invalid ID supplied"
               },
               "404": {
                  "description": "Permit not found"
               }
            },
            "security": [
               {
                  "api_key": []
               }
            ]
         }
      }
   },
   "securityDefinitions": {
      "permit_auth": {
         "type": "oauth2",
         "flow": "implicit",
         "scopes": {
            "write:permits": "modify permits",
            "read:permits": "read permits"
         }
      },
      "api_key": {
         "type": "apiKey",
         "name": "api_key",
         "in": "header"
      }
   },
   "definitions": {
       "properties": {
          "type": "object",
          "properties": {
            "type" : { "type":"string"},
            "region": { "type" : "integer" },
            "forest": { "type" : "integer" },
            "district": { "type" : "integer" },
            "authorizingOfficerName": { "type" : "string"},
            "authorizingOfficerTitle": { "type" : "string"},
            "applicant-info": {
               "$ref": "#/definitions/applicant-info"
            },
            "type-specific-fields": {
              "$ref": "#/definitions/non-commercial-fields"
            }
          },
          "required": ["type","region","forest","district","applicant-info"],
          "xml": {
            "name": "properties"
          }
        },
       "applicant-info": {
         "type": "object",
         "properties": {
            "firstName": { "type": "string" },
            "lastName": { "type": "string" },
            "dayPhone": { "$ref": "#/definitions/phone-number" },
            "eveningPhone": { "$ref": "#/definitions/phone-number" },
            "emailAddress": { "type": "string" },
            "mailingAddress": { "type": "string" },
            "mailingCity": { "type": "string" },
            "mailingState": { "type": "string" },
            "mailingZIP": { "type": "integer" },
            "organizationName": { "type": "string"},
            "website":{"type": "string"},
            "orgType":{
               "type":"string",
               "description":"Organization Type",
               "enum":[
                  "Individual",
                  "Corporation",
                  "Limited Liability Company",
                  "Partnership or Association",
                  "State Government or Agency",
                  "Local Government or Agency",
                  "Nonprofit"
               ]
            }            
         },
         "required": ["firstName","lastName","dayPhone","emailAddress","mailingAddress","mailingCity","mailingZIP","mailingState"],
         "xml": {
            "name": "applicant-info"
         }
      },
      "phone-number": {
        "type": "object",
         "properties": {
            "areaCode": { "type": "integer"},
            "number": { "type": "integer"},
            "extension": { "type": "integer"},
            "type": {"type": "string"}
         },
         "required": ["areaCode","number","type"],
         "xml": {
            "name": "phone-number"
         }  
      },
      "non-commercial-fields": {
        "type": "object",
        "properties": {
          "activityDescription": { "type": "string"},
          "locationDescription": {  "type": "string"},
          "startDateTime": { "type": "string"},
          "endDateTime": { "type": "string"},
          "numberParticipants" : { "type": "integer"}
        },
        "required": ["activityDescription","locationDescription","startDateTime","endDateTime","numberParticipants"],
        "xml": {
            "name": "non-commercial-fields"
         } 
      },
      "temp-outfitter-fields": {
        "type": "object",
        "properties": {
          "insuranceCertificate": { "type": "string"}
        },
        "required": ["insuranceCertificate"],
        "xml": {
            "name": "temp-outfitter-fields"
         } 
      },
      "permit": {
         "type": "object",
         "properties": {
            "properties": {
              "$ref": "#/definitions/properties"  
            }
         },
         "required": ["properties"],
         "xml": {
            "name": "permit"
         }
      },
      "ApiResponse": {
         "type": "object",
         "properties": {
            "code": {
               "type": "integer",
               "format": "int32"
            },
            "type": {
               "type": "string"
            },
            "message": {
               "type": "string"
            }
         }
      }
   }
}